[1mdiff --git a/Frontend/blu-plataform/package-lock.json b/Frontend/blu-plataform/package-lock.json[m
[1mindex 0413589..047ddc2 100644[m
[1m--- a/Frontend/blu-plataform/package-lock.json[m
[1m+++ b/Frontend/blu-plataform/package-lock.json[m
[36m@@ -11,6 +11,7 @@[m
         "@testing-library/jest-dom": "^5.17.0",[m
         "@testing-library/react": "^13.4.0",[m
         "@testing-library/user-event": "^13.5.0",[m
[32m+[m[32m        "axios": "^1.7.7",[m
         "react": "^18.3.1",[m
         "react-dom": "^18.3.1",[m
         "react-router-dom": "^6.27.0",[m
[36m@@ -6571,6 +6572,29 @@[m
         "node": ">=4"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/axios": {[m
[32m+[m[32m      "version": "1.7.7",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/axios/-/axios-1.7.7.tgz",[m
[32m+[m[32m      "integrity": "sha512-S4kL7XrjgBmvdGut0sN3yJxqYzrDOnivkBiN0OFs6hLiUam3UPvswUo0kqGyhqUZGEOytHyumEdXsAkgCOUf3Q==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "follow-redirects": "^1.15.6",[m
[32m+[m[32m        "form-data": "^4.0.0",[m
[32m+[m[32m        "proxy-from-env": "^1.1.0"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/axios/node_modules/form-data": {[m
[32m+[m[32m      "version": "4.0.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/form-data/-/form-data-4.0.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-tzN8e4TX8+kkxGPK8D5u0FNmjPUjw3lwC9lSLxxoB/+GtsJG91CO8bSWy73APlgAZzZbXEYZJuxjkHH2w+Ezhw==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "asynckit": "^0.4.0",[m
[32m+[m[32m        "combined-stream": "^1.0.8",[m
[32m+[m[32m        "mime-types": "^2.1.12"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 6"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/axobject-query": {[m
       "version": "4.1.0",[m
       "resolved": "https://registry.npmjs.org/axobject-query/-/axobject-query-4.1.0.tgz",[m
[36m@@ -16618,6 +16642,11 @@[m
         "node": ">= 0.10"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/proxy-from-env": {[m
[32m+[m[32m      "version": "1.1.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg=="[m
[32m+[m[32m    },[m
     "node_modules/psl": {[m
       "version": "1.9.0",[m
       "resolved": "https://registry.npmjs.org/psl/-/psl-1.9.0.tgz",[m
[1mdiff --git a/Frontend/blu-plataform/package.json b/Frontend/blu-plataform/package.json[m
[1mindex 1954af5..1c4d3f0 100644[m
[1m--- a/Frontend/blu-plataform/package.json[m
[1m+++ b/Frontend/blu-plataform/package.json[m
[36m@@ -6,6 +6,7 @@[m
     "@testing-library/jest-dom": "^5.17.0",[m
     "@testing-library/react": "^13.4.0",[m
     "@testing-library/user-event": "^13.5.0",[m
[32m+[m[32m    "axios": "^1.7.7",[m
     "react": "^18.3.1",[m
     "react-dom": "^18.3.1",[m
     "react-router-dom": "^6.27.0",[m
[1mdiff --git a/Frontend/blu-plataform/src/services/api.ts b/Frontend/blu-plataform/src/services/api.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..f6e87f2[m
[1m--- /dev/null[m
[1m+++ b/Frontend/blu-plataform/src/services/api.ts[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32mimport axios from 'axios'[m
[32m+[m
[32m+[m[32mexport const api = axios.create({[m
[32m+[m[32m    baseURL: "http://localhost:8080"[m
[32m+[m[32m})[m
\ No newline at end of file[m
[1mdiff --git a/Frontend/node_modules/.bin/detect-libc b/Frontend/node_modules/.bin/detect-libc[m
[1mnew file mode 100644[m
[1mindex 0000000..76becf3[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/detect-libc[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../detect-libc/bin/detect-libc.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../detect-libc/bin/detect-libc.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/Frontend/node_modules/.bin/detect-libc.cmd b/Frontend/node_modules/.bin/detect-libc.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..1c5d86d[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/detect-libc.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\detect-libc\bin\detect-libc.js" %*[m
[1mdiff --git a/Frontend/node_modules/.bin/detect-libc.ps1 b/Frontend/node_modules/.bin/detect-libc.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..5ebeae1[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/detect-libc.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../detect-libc/bin/detect-libc.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../detect-libc/bin/detect-libc.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../detect-libc/bin/detect-libc.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../detect-libc/bin/detect-libc.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/Frontend/node_modules/.bin/loose-envify b/Frontend/node_modules/.bin/loose-envify[m
[1mnew file mode 100644[m
[1mindex 0000000..076f91b[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/loose-envify[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../loose-envify/cli.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../loose-envify/cli.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/Frontend/node_modules/.bin/loose-envify.cmd b/Frontend/node_modules/.bin/loose-envify.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..599576f[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/loose-envify.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\loose-envify\cli.js" %*[m
[1mdiff --git a/Frontend/node_modules/.bin/loose-envify.ps1 b/Frontend/node_modules/.bin/loose-envify.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..eb866fc[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/loose-envify.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../loose-envify/cli.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/Frontend/node_modules/.bin/sass b/Frontend/node_modules/.bin/sass[m
[1mnew file mode 100644[m
[1mindex 0000000..dde8400[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/sass[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32mbasedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[32m+[m
[32m+[m[32mcase `uname` in[m
[32m+[m[32m    *CYGWIN*|*MINGW*|*MSYS*)[m
[32m+[m[32m        if command -v cygpath > /dev/null 2>&1; then[m
[32m+[m[32m            basedir=`cygpath -w "$basedir"`[m
[32m+[m[32m        fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -x "$basedir/node" ]; then[m
[32m+[m[32m  exec "$basedir/node"  "$basedir/../sass/sass.js" "$@"[m
[32m+[m[32melse[m[41m [m
[32m+[m[32m  exec node  "$basedir/../sass/sass.js" "$@"[m
[32m+[m[32mfi[m
[1mdiff --git a/Frontend/node_modules/.bin/sass.cmd b/Frontend/node_modules/.bin/sass.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..0cf95f6[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/sass.cmd[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m@ECHO off[m
[32m+[m[32mGOTO start[m
[32m+[m[32m:find_dp0[m
[32m+[m[32mSET dp0=%~dp0[m
[32m+[m[32mEXIT /b[m
[32m+[m[32m:start[m
[32m+[m[32mSETLOCAL[m
[32m+[m[32mCALL :find_dp0[m
[32m+[m
[32m+[m[32mIF EXIST "%dp0%\node.exe" ([m
[32m+[m[32m  SET "_prog=%dp0%\node.exe"[m
[32m+[m[32m) ELSE ([m
[32m+[m[32m  SET "_prog=node"[m
[32m+[m[32m  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mendLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\sass\sass.js" %*[m
[1mdiff --git a/Frontend/node_modules/.bin/sass.ps1 b/Frontend/node_modules/.bin/sass.ps1[m
[1mnew file mode 100644[m
[1mindex 0000000..715ffd5[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.bin/sass.ps1[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m#!/usr/bin/env pwsh[m
[32m+[m[32m$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[32m+[m
[32m+[m[32m$exe=""[m
[32m+[m[32mif ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[32m+[m[32m  # Fix case when both the Windows and Linux builds of Node[m
[32m+[m[32m  # are installed in the same directory[m
[32m+[m[32m  $exe=".exe"[m
[32m+[m[32m}[m
[32m+[m[32m$ret=0[m
[32m+[m[32mif (Test-Path "$basedir/node$exe") {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "$basedir/node$exe"  "$basedir/../sass/sass.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "$basedir/node$exe"  "$basedir/../sass/sass.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m} else {[m
[32m+[m[32m  # Support pipeline input[m
[32m+[m[32m  if ($MyInvocation.ExpectingInput) {[m
[32m+[m[32m    $input | & "node$exe"  "$basedir/../sass/sass.js" $args[m
[32m+[m[32m  } else {[m
[32m+[m[32m    & "node$exe"  "$basedir/../sass/sass.js" $args[m
[32m+[m[32m  }[m
[32m+[m[32m  $ret=$LASTEXITCODE[m
[32m+[m[32m}[m
[32m+[m[32mexit $ret[m
[1mdiff --git a/Frontend/node_modules/.package-lock.json b/Frontend/node_modules/.package-lock.json[m
[1mnew file mode 100644[m
[1mindex 0000000..f360327[m
[1m--- /dev/null[m
[1m+++ b/Frontend/node_modules/.package-lock.json[m
[36m@@ -0,0 +1,303 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "frontend",[m
[32m+[m[32m  "lockfileVersion": 3,[m
[32m+[m[32m  "requires": true,[m
[32m+[m[32m  "packages": {[m
[32m+[m[32m    "node_modules/@parcel/watcher": {[m
[32m+[m[32m      "version": "2.4.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@parcel/watcher/-/watcher-2.4.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-HNjmfLQEVRZmHRET336f20H/8kOozUGwk7yajvsonjNxbj2wBTK1WsQuHkD5yYh9RxFGL2EyDHryOihOwUoKDA==",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "detect-libc": "^1.0.3",[m
[32m+[m[32m        "is-glob": "^4.0.3",[m
[32m+[m[32m        "micromatch": "^4.0.5",[m
[32m+[m[32m        "node-addon-api": "^7.0.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 10.0.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "funding": {[m
[32m+[m[32m        "type": "opencollective",[m
[32m+[m[32m        "url": "https://opencollective.com/parcel"[m
[32m+[m[32m      },[m
[32m+[m[32m      "optionalDependencies": {[m
[32m+[m[32m        "@parcel/watcher-android-arm64": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-darwin-arm64": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-darwin-x64": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-freebsd-x64": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-linux-arm-glibc": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-linux-arm64-glibc": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-linux-arm64-musl": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-linux-x64-glibc": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-linux-x64-musl": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-win32-arm64": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-win32-ia32": "2.4.1",[m
[32m+[m[32m        "@parcel/watcher-win32-x64": "2.4.1"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/@parcel/watcher-win32-x64": {[m
[32m+[m[32m      "version": "2.4.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@parcel/watcher-win32-x64/-/watcher-win32-x64-2.4.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-+DvS92F9ezicfswqrvIRM2njcYJbd5mb9CUgtrHCHmvn7pPPa+nMDRu1o1bYYz/l5IB2NVGNJWiH7h1E58IF2A==",[m
[32m+[m[32m      "cpu": [[m
[32m+[m[32m        "x64"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "optional": true,[m
[32m+[m[32m      "os": [[m
[32m+[m[32m        "win32"[m
[32m+[m[32m      ],[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">= 